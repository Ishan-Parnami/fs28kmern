import React from 'react';
import About from './components/About'
import Contact from './components/Contact';
let myStyle = {
  color:"red",
  backgroundColor:"green",
  padding:"20px",
  border:"2px solid red"
}
function App() {
  return (
    <>
    
<div>
  <h1 style={{color:"red",backgroundColor:"aqua"}}>text</h1>
  <h1 style={myStyle}>text</h1>
  <h1 style={myStyle}>text</h1>
  {section}
  <About/>
  <About/>
  <About/>
 <Contact/>

</div>
    </>
    
  )
}


let section  = <main>
  <h1>Adfar Rasheed</h1>
  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur, exercitationem?</p>
  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur, exercitationem?</p>
</main>
export default App


import React from 'react'
import News from './components/News'
// import About from './components/About'
// import Contact from './components/Contact'
// let lastName = "RAshid"
function App() {
  return (
    <div>
       {/* <About firstName="Adfar" age={25} salary ="5000"/>
       <About firstName="Ankit" age={24} salary ="50000"/>
       <Contact lastName={lastName}/> */}
       <News>
        <div>
          <h1>I am children div of my News component</h1>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati, nam.</p>
        </div>
       </News>
    </div>
  )
}

export default App


import React from 'react'
// import Count from './components/Count'
// import Conditional from './components/Conditional'
// import Item from "./components/Item"
function App() {
  return (
    <div>
      {/* <Item fName="Adfar" skills={["HTML","CSS","JS"]} 
      person={{
        name:"Adfar",
        age:25,
        salary:5000
      }}/> */}
      {/* <Conditional allow= {true}/>
      <Conditional allow= {false}/>
      <Conditional allow= {true}/> */}
      {/* <Count/>
      <Count/> */}
    </div>
  )
}

export default App

import React, { useState } from 'react'
import "./App.css"
function App() {
  console.log("adfar")
  const [backgroundColor,setBackgroundColor] = useState("black")
  const [cName,setCName] = useState("black")
  return (
    <div>
      <div className={cName} style={{height:"300px",width:"300px",border:"2px solid red"}}>
        
      </div>
      {/* <button onClick={()=>setBackgroundColor("red")}>Red</button>
         <button onClick={()=>setBackgroundColor("blue")}>Blue</button>
         <button onClick={()=>setBackgroundColor("pink")}>Pink</button>
         <button onClick={()=>setBackgroundColor("green")}>Green</button>
         <button onClick={()=>setBackgroundColor("aqua")}>Aqua</button> */}
         <button onClick={()=>setCName("red")}>Red</button>
         <button onClick={()=>setCName("blue")}>Blue</button>
         <button onClick={()=>setCName("pink")}>Pink</button>
         <button onClick={()=>setCName("green")}>Green</button>
         <button onClick={()=>setCName("aqua")}>Aqua</button>
    </div>
  )
}

export default App


//themechanger
import React, { useState } from 'react'

function App() {
  const [color,setColor] = useState("white");
  const [text,setText] =useState("Dark")
  function handleColor(){
    if(color === "white"){
      setColor("black")
      setText("Light")
    } else {
      setColor("white")
    setText("Dark")
    }
  }
  return (
    <div>
      <div style={{height:"100vh",backgroundColor:color,width:"100vw",border:"2px solid red"}}>
      <button onClick={handleColor}>{text}</button>
      </div>
     
    </div>
  )
}

export default App


//themechanger

import React, { useState } from 'react'

function App() {
  const [condition,setCondition] = useState(true)
  function handleColor(){
    setCondition(!condition)
  }
  return (
    <div>
      <div style={{height:"100vh",backgroundColor:condition?"white":"black",width:"100vw",border:"2px solid red"}}>
      <button onClick={handleColor}>{condition?"DARK":"LIGHT"}</button>
      </div>
     
    </div>
  )
}

export default App

//map 
import React from 'react'

function App() {
  var data = [
    1,
    ["a","b","c"],
    ["D","e","f"],
    ["g","e","f"],
    2
  ]
  return (
    <div>
      {data.map((item,index)=>item.map((item2,index)=><li key={index}>{item2}</li>
      ))}
    </div>
  )
}

export default App


//state batching and state scheduling

import React, { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0);
  function handleIncrement(){
    // setCount(count + 1);
    // setCount(count + 1);
    // setCount(count + 1);
    // setCount(count + 1);
    // setCount(n=>n+1)
    // setCount(n=>n+1)
    // setCount(n=>n+1)
    setCount(n=>n+1)
    setCount(count+2)
  }
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={handleIncrement}>Increment</button>
      <button>Decrement</button>
    </div>
  )
}

//controlled components
import React, { useState } from 'react'

function App() {
  const [username,setUsername] = useState("");
  const [email,setEmail] = useState("")
  const [pass,setPass] = useState("");
  const [condition,setCondition] = useState(true)
  function handleSubmit(e){
    e.preventDefault()
    setCondition(!condition)
  }
  return (
    <div>
      <form>
        <input type="text" placeholder='Username' value={username}
        onChange={(e)=>setUsername(e.target.value)}/>
        <input type="email" placeholder='email' value={email}
        onChange={(e)=>setEmail(e.target.value)}/>
        <input type="password" placeholder='password' value={pass}
        onChange={(e)=>setPass(e.target.value)}/>
        <br />
        <button onClick={handleSubmit}>Submit</button>
      </form>
      
      {!condition && (
        <div>
          <h1>My username is {username}</h1>
          <h1>My email is {email}</h1>
          <h1>My password is {pass}</h1>
        </div>
      )}
    </div>
  )
}

export default App

//object state
import React, { useState } from 'react'

function App() {
   const [input,setInput] = useState({
    username:"",
    email:"",
    pass:""
   })
   console.log(input)
  const [condition,setCondition] = useState(true)
  function handleSubmit(e){
    e.preventDefault()
    setCondition(!condition)
  }
  return (
    <div>
      <form>
        <input type="text" placeholder='Username' value={input.username}
        onChange={(e)=>setInput((prev)=>({...prev,username:e.target.value}))}/>
        <input type="email" placeholder='email' value={input.email}
        onChange={(e)=>setInput((prev)=>({...prev,email:e.target.value}))}
       />
        <input type="password" placeholder='password' value={input.pass}
        onChange={(e)=>setInput((prev)=>({...prev,pass:e.target.value}))}/> 
        <br />
        <button onClick={handleSubmit}>Submit</button>
      </form>
      
      {/* {!condition && (
        <div>
          <h1>My username is {username}</h1>
          <h1>My email is {email}</h1>
          <h1>My password is {pass}</h1>
        </div>
      )} */}
    </div>
  )
}

export default App

//
import React, { useState } from 'react'
import Demo from './components/classbasedcomponents/Demo'

export default function App() {
  const [color,setColor] =useState("gray")
  return (
    <div>
      <Demo fName="Adfar" lname="rashed" color={color}/>
      <button onClick={()=>setColor("blue")}>blue</button>
      <button onClick={()=>setColor("orange")}>orange</button>
      <button onClick={()=>setColor("brown")}>brown</button>
      <button onClick={()=>setColor("pink")}>pink</button>
    </div>
  )
}

//useEffect

import React,{useEffect, useState} from 'react'
import CWumount from './components/CWumount';

export default function App() {
  const [count,setCount] = useState(0);
  const [allow,setAllow] = useState(true)
  useEffect(()=>{
    console.log('useEffect')
  })
  function handleIncrement(){
    setCount(count+1)
  }
  return (
    <div>
      <h1>{count}</h1>
      {allow && <CWumount/>}
      <button onClick={()=>setAllow(!allow)}>Remove</button>
      <button onClick={handleIncrement}>Increment by 1</button>
    </div>
  )
}
//useEffect intro 

import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(10)
  useEffect(()=>{
    console.log('useEffect')
  },[count,number]);
  function handleIncrement(){
    setCount(count+1)
  }
  function handleDecrement(){
    setNumber(number-1)
  }
  return (
    <div>
      <h1>count: {count}</h1>
      <button onClick={handleIncrement}>Increment</button>
      <h1>Number: {number}</h1>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  )
}
//cleanup function-1

import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  useEffect(()=>{
    console.log('useEffect')
    let fun =()=>{
      console.log("adfar")
    }
    document.addEventListener("click",fun)
    return ()=>{
      document.removeEventListener("click",fun)
    }
  })
  function handleIncrement(){
    setCount(count+1)
  }
  return (
    <div>
      <h1>count: {count}</h1>
      <button onClick={handleIncrement}>Increment</button>
    </div>
  )
}

//cleanup function-2
import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [date,setDate]= useState(0)
  useEffect(()=>{
    console.log('useEffect')
    var interval =setInterval(()=>{
      console.log("timer")
    },2000)
    return ()=>{
      clearInterval(interval)
    }
  })
  function handleIncrement(){
    setCount(count+1)
  }
  return (
    <div>
      <h1>count: {count}</h1>
      <button onClick={handleIncrement}>Increment</button>
    </div>
  )
}

//date

import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [date,setDate]= useState(0)
  useEffect(()=>{
    console.log('useEffect')
    setInterval(()=>{
      setDate(new Date())
    },1000)
    
  })
  function handleIncrement(){
    setCount(count+1)
  }
  return (
    <div>
      <h1>{date.toLocaleString()}</h1>
      <h1>count: {count}</h1>
      <button onClick={handleIncrement}>Increment</button>
    </div>
  )
}

//usereducdr 
import { useReducer } from "react"
const reducer = (state,action)=>{
  console.log(state,action)
  if(action.type === 'one'){
    return {count:state.count+1}
  } else if(action.type === 'two'){
    return {count:state.count+2}
  }
  return state
}
export default function App(){
  const [state,dispatch]= useReducer(reducer,{count:0})
  return (
    <div>
       <h1>{state.count}</h1>
       <button onClick={()=>dispatch({type:"one"})}>Increment 1</button>
       <button onClick={()=>dispatch({type:"two"})}>Increment 2</button>
       <button onClick={()=>dispatch({type:"three"})}>Increment 3</button>
    </div>
  )
}

//usereducer 2
import React, { useReducer } from 'react'
function reducer(state,action){
 switch(action.type){
  case "red":
    return {background:"red",count:state.count+action.payload};
    case "green":
      return {background:"green",count:state.count-action.payload};
      case "pink":
        return {background:"pink",count:state.count+action.payload};
        case "blue":
    return {background:"blue",count:state.count-action.payload};
  default:
    return state
 }
}
export default function App() {
  const [state,dispatch] =useReducer(reducer,{background:"gray",count:0})
  return (
    <div style={{width:"300px",backgroundColor:state.background,height:"300px",border:"red solid 3px"}}>
      <h1>Hello World!</h1>
      <h1>{state.count}</h1>
      <button onClick={()=>dispatch({type:"red",payload:10})}>Red + 10</button>
      <button onClick={()=>dispatch({type:"green",payload:20})}>Green-20</button>
      <button onClick={()=>dispatch({type:"pink",payload:20})}>Pink+20</button>
      <button onClick={()=>dispatch({type:"blue",payload:10})}>Blue-10</button>
    </div>
  )
}


/react-router-dom
import React from 'react'
import { BrowserRouter, Route, Routes } from 'react-router-dom'
import Home from './components/react router/Home'
import Aboutt from './components/react router/Aboutt'
import Blog from './components/react router/Blog'
import Contact from './components/react router/Contact'
import Shop from './components/react router/Shop'
import Adfar from './components/react router/Adfar'
import Pomodoro from './components/Pomodoro'

import User from './components/react router/User'
import UserDetails from './components/react router/UserDetails'
import Phone from './components/react router/Phone'
import Numbers from './components/react router/Numbers'
import Company from './components/react router/Company'
import Ceo from './components/react router/Ceo'
import Manager from './components/react router/Manager'
import Mainhome from './components/react router/Mainhome'

export default function App() {
  return (
    <div>
      
      <BrowserRouter>
      
        <Routes>
          <Route path='/' element={<Mainhome/>}>
            <Route index element={<Home/>} />
            <Route path='/about' element={<Aboutt/>}/>
            <Route path='/contact' element={<Contact/>}>
              <Route path='company' element={<Company/>}/>
              <Route path='ceo' element={<Ceo/>}/>
              <Route path='manager' element={<Manager/>}/>
            </Route>
            <Route path='/blog' element={<Blog/>}/>
            <Route path='/shop' element={<Shop/>}/>
            <Route path='/user' element={<User/>}/>
            <Route path='/user/:userid' element={<UserDetails/>}/>
            <Route path='/user/:userid/phone' element={<Phone/>}/>
            <Route path='/user/:userid/phone/:no' element={<Numbers/>}/>
            <Route path='/adfar' element={<Adfar/>}/>

            <Route path='/pomodoro' element={<Pomodoro/>}/>
          </Route>
        </Routes>
      </BrowserRouter>
    </div>
  )
}

//context api 
import React, { createContext } from 'react'
import Component1 from './components/contextAPI/Component1'
const myContext = createContext();
const lastName = createContext();
export default function App() {
  return (
    <div>
      <myContext.Provider value="Adfar">
        <lastName.Provider value="Rasheed">
            <Component1/>
        </lastName.Provider>
        
      </myContext.Provider>
      
    </div>
  )
}
export {myContext,lastName}


import React from 'react'
import StateProvider from './components/contextAPI/StateProvider'
import TodoContext from './components/todo/TodoContext'
import AddTodo from './components/todo/AddTodo'
import TodoList from './components/todo/TodoList'

export default function App() {
  return (
    <div>
      <TodoContext>
        <AddTodo/>
        <TodoList/>
      </TodoContext>
    </div>
  )
}
//usememo eg 1

import React, { useMemo, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(100);
  const isEven=useMemo(()=>{
         let i=0
         while(i<2000000000) i++;
         return count%2===0
        
    },[count])
  return (
    <div>
      <h1>Count : {count}</h1>
      <button onClick={()=>setCount(count+1)}>Increment Count</button>
      <h1>{isEven?"EVEN":"ODD"}</h1>
      <h1>Number  : {number}</h1>
      <button onClick={()=>setNumber(number-1)}>Decrement Number</button>
    </div>
  )
}


//useMemo 
import React, { useState } from 'react'
import TodoList from './components/memo/TodoList'
import { createTodos } from './components/memo/utils'
import "./App.css"
let todos = createTodos()
export default function App() {
const [tab,setTab] = useState("all")
const [isDark,setIsDark] = useState(false)
  return (
    <div>
      <button onClick={()=>setTab("all")}>All</button>
      <button onClick={()=>setTab("active")}>Active</button>
      <button onClick={()=>setTab("completed")}>Completed</button>
      <br />
      <label>
        <input type="checkbox" value="" 
        onChange={(e)=>setIsDark(e.target.checked)}/>
        Dark Mode
      </label>
      <TodoList
       todos = {todos}
       tab = {tab}
       theme = {isDark ?  "dark" : "light"}
      />
    </div>
  )
}


/memo fails 

import React, { useCallback, useState } from 'react'
import Children from './Children'

export default function App() {
  const [count,setCount] = useState(0)
 function handleClick(){
  setCount(count+1)
 }
 const fun = useCallback(()=>{
  console.log("adfarrr")
 },[])
 console.log("parent")
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={handleClick}>Increment</button>
      <Children fun={fun}/>
    </div>
  )
}


//usecallback 

import React, { useCallback, useState } from 'react'
const x = new Set()
export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(10)
  const incrementCount = useCallback(()=>{
    setCount(count+1)
  },[count])
  const decrementCount = useCallback(()=>{
    setCount(count-1)
  },[count])
  const incrementNumber = useCallback(()=>{
    setNumber(number+1)
  },[number])
  const decrementNumber = useCallback(()=>{
    setNumber(number-1)
  },[number])
  x.add(incrementCount)
  x.add(decrementCount)
  x.add(incrementNumber)
  x.add(decrementNumber)
  console.log(x)
  alert(x.size)
  return (
    <div>
      <h1>Count:{count}</h1>
      <button onClick={incrementCount}>Increment Count</button>
      <button onClick={decrementCount}>Decrement Count</button>
      <h2>Number : {number}</h2>
      <button onClick={incrementNumber}>Increment Number</button>
      <button onClick={decrementNumber}>Decrement Number</button>
    </div>
  )
}


import React from 'react'
import Counter from './components/customHooks/Counter'
import Like from './components/customHooks/Like'
import Unlike from './components/customHooks/Unlike'
import Todoo from './components/customHooks/Todoo'

export default function App() {
  return (
    <div>
      <Todoo/>
      <Counter/>
      <Like/>
      <Unlike></Unlike>
    </div>
  )
}

//createPortals

import React, { useState } from 'react'
import Modal from './components/Modal'

export default function App() {
  const [condition,setCondition] = useState(false)
  return (
    <div>
      <h1>This is a modal component</h1>
      <button onClick={()=>setCondition(true)}>Show Modal</button>
      <Modal condition={condition}>
        <h1>Modal</h1>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ex exercitationem omnis dicta ducimus explicabo iste iure odit nihil cum molestiae!</p>
      </Modal>
    </div>
  )
}


//lazyloading

import React, { Suspense, lazy } from 'react'
import Importatcom from './components/lazyloading/Importatcom';
const Component1 = lazy(()=>import("./components/lazyloading/Component1.js"))
const Component2 = lazy(()=>import("./components/lazyloading/Component2.js"))

export default function App() {
  return (
    <div>
     <Importatcom/>
     <Suspense fallback={<div>Please wait......</div>}>
        <Component1/>
     </Suspense>
     <Suspense fallback={<h1>Sabr rakhiyai....</h1>}>
      <Component2/>
     </Suspense>
      {/* <Component2/>  */}
    </div>
  )
}
//Errorboundary

import React from 'react'
import ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'
import Counter from './components/ErrorBoundary/Counter'


export default function App() {
  return (
    <div>
      <ErrorBoundary>
        <Counter/>
        <Counter/>
      </ErrorBoundary>
      <ErrorBoundary>
        <Counter/>
      </ErrorBoundary>
      <Counter/>
    
      <h1>Hello Adfar</h1>
    </div>
  )
}


//redux

import React from 'react'
import Counterredux from './Counterredux'
import Tdoredux from './Tdoredux'
import { setBackgroundColor } from './Reduxstore/action'
import { useDispatch, useSelector } from 'react-redux'
export default function App() {
  const color = useSelector((state)=>state.color)
  const dispatch = useDispatch()
  console.log(color)
    return (
    <div style={{backgroundColor:color.backgroundColor}}>
      <Tdoredux/>
      <Counterredux/>
      <button onClick={()=>dispatch(setBackgroundColor("blue"))}>Blue</button>
      <button onClick={()=>dispatch(setBackgroundColor("green"))}>Green</button>
      <button onClick={()=>dispatch(setBackgroundColor("yellow"))}>yellow</button>
      <button onClick={()=>dispatch(setBackgroundColor("pink"))}>pink</button>
    </div>
  )
}


